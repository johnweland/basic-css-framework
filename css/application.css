:root, [data-theme="light"], [data-theme="default"] {
  --color-charcoal: #313131;
  --color-charcoal-dark: #1d1d1d;
  --color-charcoal-dark-x: #0b0b0b;
  --color-charcoal-light: #4b4b4b;
  --color-frost: #e6e6e6;
  --color-frost-dark: #d2d2d2;
  --color-frost-dark-x: #b3b3b3;
  --color-frost-light: white;
  --color-mint: #64b496;
  --color-sunburst: #e68c0a;
  --theme-base: #e6e6e6;
  --theme-tint: white;
  --theme-shade: #d2d2d2;
  --theme-shade-x: #b3b3b3;
  --theme-disabled: #b3b3b3;
  --theme-font: #313131;
  --theme-accent: #64b496;
  --border-radius: 2px;
  --border-style: 1px solid var(--theme-shade);
  --box-shadow: 1px 1px 5px 0px var(--theme-shade-x);
  --box-shadow-inset: inset 0px 0px 5px 0px var(--theme-shade-x);
  --padding: 1rem;
}

[data-theme="dark"] {
  --theme-base: #313131;
  --theme-tint: #4b4b4b;
  --theme-shade: #1d1d1d;
  --theme-shade-x: #0b0b0b;
  --theme-disabled: #0b0b0b;
  --theme-font: #e6e6e6;
  --theme-accent: #e68c0a;
  --border-style: 1px solid var(--theme-shade);
  --box-shadow: 1px 1px 5px 0px var(--theme-shade-x);
  --box-shadow-inset: inset 0px 0px 5px 0px var(--theme-shade-x);
}

@font-face {
  font-family: 'Montserrat';
  font-style: normal;
  font-weight: 400;
  src: local("Montserrat Regular"), local("Montserrat-Regular"), url("../fonts/Montserrat-Regular.ttf") format("truetype");
  font-display: swap;
}

@font-face {
  font-family: 'Spacemono';
  font-style: normal;
  font-weight: 400;
  src: local("SpaceMono Regular"), local("Spacemono-Regular"), url("../fonts/SpaceMono-Regular.ttf") format("truetype");
  font-display: swap;
}

*, *::before, *::after {
  font-family: 'Montserrat';
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  gap: .5rem;
}

* + * {
  margin-top: calc(var(--padding) / 2);
}

h1 {
  margin-bottom: 1.5rem;
  font-size: clamp(3rem, 3.25vw, 3.5rem);
}

h2 {
  margin-bottom: 1.2rem;
  font-size: clamp(2.25em, 3vw, 3rem);
}

h3 {
  margin-bottom: 1rem;
  font-size: clamp(2rem, 2.75vw, 2.75rem);
}

h4 {
  margin-bottom: 1rem;
  font-size: clamp(1.75rem, 2.5vw, 2.5rem);
}

h5 {
  margin-bottom: 1rem;
  font-size: clamp(1.5rem, 2.25vw, 2.25rem);
}

h6 {
  margin-bottom: 1rem;
  font-size: clamp(1.25rem, 1.5vw, 1.25rem);
}

a, p {
  color: var(--theme-font);
  font-size: clamp(1.25rem, 1.5vw, 1.5rem);
}

a:hover, a :active {
  color: var(--theme-accent);
  font-weight: 500;
}

ol, ul {
  font-size: 1.2rem;
  padding-left: 2rem;
}

ol li, ul li {
  margin: 1rem 0;
}

pre {
  display: flex;
  flex-direction: column;
  font-family: monospace;
  font-size: 1.2rem;
  background-color: var(--theme-shade);
  padding: var(--padding);
  box-shadow: var(--box-shadow-inset);
  overflow-x: scroll;
}

pre h3, pre h4, pre h5 {
  margin-bottom: unset;
  font-size: 1.2rem;
}

pre + code {
  margin-top: unset;
  font-family: monospace;
  font-size: 1rem;
  height: 100%;
}

table, .table {
  width: 100%;
  margin: calc(var(--padding) / 2) 0;
}

table.table-striped, .table.table-striped {
  border-collapse: separate;
  border-spacing: 1px;
  border-radius: var(--border-radius);
  border: var(--border-style);
}

table.table-striped thead th, .table.table-striped thead th {
  text-align: left;
}

table.table-striped tr:nth-child(even), .table.table-striped tr:nth-child(even) {
  background-color: var(--theme-shade);
}

table.table-striped th, table.table-striped td, .table.table-striped th, .table.table-striped td {
  padding: calc(var(--padding) / 2);
}

legend {
  position: relative;
  z-index: 2;
  margin-left: 1rem;
  margin-bottom: -1rem;
  padding: 0 1rem;
  background-color: var(--theme-base);
  width: fit-content;
}

fieldset {
  padding: var(--padding);
  border-radius: var(--border-radius);
  border: 1px solid var(--theme-shade);
}

label {
  font-size: 1rem;
}

input, select {
  appearance: none;
  -moz-appearance: none;
  padding: 0 var(--padding);
  background-color: var(--theme-shade);
  border: 1px solid transparent;
  outline: none;
  color: var(--theme-font);
  font-size: 1.2rem;
  height: 4rem;
  transition: all 0.3s ease;
  box-shadow: var(--box-shadow-inset);
}

input:disabled, select:disabled {
  background-color: var(--theme-disabled);
  color: var(--theme-base);
}

input:disabled:hover, input:disabled:focus, input:disabled:active, select:disabled:hover, select:disabled:focus, select:disabled:active {
  border: 1px solid transparent;
}

input:disabled + label, select:disabled + label {
  color: var(--theme-base);
}

input:hover, input:focus, input:active, select:hover, select:focus, select:active {
  border: 1px solid var(--theme-font);
}

input[type="checkbox"], input[type="radio"] {
  appearance: none;
  vertical-align: middle;
  display: inline-block;
  position: relative;
  width: auto;
  height: unset;
  min-height: unset;
  padding: var(--padding);
}

input[type="checkbox"]:checked, input[type="radio"]:checked {
  background-color: var(--theme-accent);
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05), inset 0px -15px 10px -12px rgba(0, 0, 0, 0.05), inset 15px 10px -12px rgba(255, 255, 255, 0.1);
  color: var(--theme-font);
}

input[type="checkbox"]:checked::after, input[type="radio"]:checked::after {
  content: '\2714';
  font-size: 1.6rem;
  position: absolute;
  top: 0px;
  left: 4px;
  color: var(--theme-font);
}

input[type="checkbox"]:checked:disabled, input[type="radio"]:checked:disabled {
  background-color: var(--theme-disabled);
}

input[type="checkbox"]:checked:disabled::after, input[type="radio"]:checked:disabled::after {
  color: var(--theme-base);
}

input[type="checkbox"]:checked::after {
  left: 5px;
}

input[type="radio"] {
  border-radius: 50%;
}

input[type="radio"]:checked::after {
  content: '\00B7';
  font-size: 7rem;
  line-height: .9rem;
  left: 1.5px;
}

input[type="date"] {
  position: relative;
  padding-bottom: calc(var(--padding) /3);
}

input[type="date"]::-webkit-calendar-picker-indicator {
  color: transparent;
  background: none;
  z-index: 1;
}

input[type="date"]::before {
  color: var(--theme-font);
  background: none;
  display: block;
  font-family: 'FontAwesome';
  content: '\f073';
  width: 15px;
  height: 20px;
  position: absolute;
  top: 1rem;
  right: 1em;
}

input[type="date"] + label.inset-label {
  padding-top: calc(var(--padding) / 4);
}

[type="color"] {
  padding: var(--padding);
  box-shadow: var(--box-shadow-inset);
}

[type="file"] {
  border: 0;
  clip: rect(0, 0, 0, 0);
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  height: 1px;
  cursor: pointer;
}

[type="file"] + label {
  background: var(--theme-shade);
  border: 1px solid transparent;
  border-radius: var(--border-radius);
  color: var(--theme-font);
  cursor: pointer;
  display: inline-block;
  outline: none;
  padding: 1.3rem 50px;
  position: relative;
  top: -3px;
  transition: all 0.3s;
  vertical-align: middle;
  overflow: hidden;
  box-shadow: var(--box-shadow-inset);
}

[type="file"] + label::before {
  color: var(--theme-font);
  font-family: "FontAwesome";
  content: '\f0ee';
  font-size: 130%;
  height: 100%;
  left: 0;
  line-height: 1;
  position: absolute;
  left: -110%;
  transition: all 0.3s;
  width: 100%;
}

[type="file"] + label:hover, [type="file"] + label:focus, [type="file"] + label:active {
  border: 1px solid var(--theme-font);
}

[type="file"] + label:hover::before, [type="file"] + label:focus::before, [type="file"] + label:active::before {
  left: 15%;
}

select {
  position: relative;
  height: unset;
  background: linear-gradient(45deg, transparent 50%, var(--theme-disabled) 50%), linear-gradient(135deg, var(--theme-disabled) 50%, transparent 50%), var(--theme-shade);
  background-position: calc(100% - 2.19rem) calc(.8rem + 1rem), calc(100% - 1.45rem) calc(.8rem + 1rem), 100% 0;
  background-size: .6em .6em, .6em .6em, 2.5em 2.5em;
  background-repeat: no-repeat;
  line-height: 3;
  padding: calc(var(--padding) / 2) var(--padding) 0 var(--padding);
}

select + label.inset-label {
  padding-top: calc(var(--padding) / 8);
}

.form-group {
  position: relative;
  display: flex;
  align-items: center;
  justify-self: start;
  flex-wrap: wrap;
}

.form-group > *:not(label):not([type="checkbox"]):not([type="radio"]):not([type="color"]) {
  flex-grow: 1;
}

.form-group > label:first-child {
  margin-left: calc(var(--padding) / 2);
}

.form-group ::placeholder {
  position: relative;
  text-align: right;
  top: -10px;
}

.form-group label.inset-label, .form-group label.inset-label {
  position: absolute;
  line-height: 3;
  height: 100%;
  padding-left: calc(var(--padding) * 1.1);
  pointer-events: none;
}

.form-group input:not([type="checkbox"]):not([type="radio"]):not([type="color"]) {
  padding-top: 1.6rem;
}

.form-group :focus + label.inset-label, .form-group :valid + label.inset-label {
  line-height: 1;
  font-size: 1rem;
  top: 0;
}

.shadow {
  box-shadow: var(--box-shadow);
}

.inset-shadow {
  box-shadow: var(--box-shadow-inset);
}

.outline {
  padding: var(--padding);
  border-radius: var(--border-radius);
  border: 1px solid var(--theme-shade);
}

a.btn, button, button.btn, input[type="button"], input[type="button"].btn {
  appearance: none;
  height: unset;
  display: inline-block;
  padding: var(--padding);
  font-size: clamp(1.25rem, 1.5vw, 1.5rem);
  width: auto;
  background-color: var(--theme-shade);
  border-radius: var(--border-radius);
  border: var(--border-style);
  border-color: transparent;
  color: var(--theme-font);
  outline: unset;
  text-decoration: unset;
  text-align: center;
  margin-top: calc(var(--padding) / 2);
  margin-right: calc(var(--padding) / 2);
  transition: all 0.3s;
  box-shadow: var(--box-shadow);
  cursor: pointer;
}

a.btn:hover, a.btn:focus, button:hover, button:focus, button.btn:hover, button.btn:focus, input[type="button"]:hover, input[type="button"]:focus, input[type="button"].btn:hover, input[type="button"].btn:focus {
  border: 1px solid var(--theme-font);
}

a.btn:active, button:active, button.btn:active, input[type="button"]:active, input[type="button"].btn:active {
  transform: scale(0.95);
}

a.btn:last-child, button:last-child, button.btn:last-child, input[type="button"]:last-child, input[type="button"].btn:last-child {
  margin-right: unset;
}

a.btn.btn--outline, button.btn--outline, button.btn.btn--outline, input[type="button"].btn--outline, input[type="button"].btn.btn--outline {
  background-color: var(--theme-base);
  border-color: var(--theme-shade);
}

a.btn.btn--outline:hover, a.btn.btn--outline:focus, button.btn--outline:hover, button.btn--outline:focus, button.btn.btn--outline:hover, button.btn.btn--outline:focus, input[type="button"].btn--outline:hover, input[type="button"].btn--outline:focus, input[type="button"].btn.btn--outline:hover, input[type="button"].btn.btn--outline:focus {
  border: 1px solid var(--theme-font-light);
}

.switch {
  position: relative;
  display: inline-block;
  top: .35rem;
  width: 42px;
  height: 22px;
  background-color: var(--theme-accent);
  border-radius: 50px;
  border: 1px solid var(--theme-shade);
  transition: all 0.3s;
  box-shadow: var(--box-shadow-inset);
  cursor: pointer;
}

.switch::after {
  content: "";
  position: absolute;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: url('data:image/svg+xml;utf8, <svg width="1rem" height="1rem" viewBox="0 0 16 16" class="bi bi-circle-half" fill="gray" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M8 15V1a7 7 0 1 1 0 14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16z"/></svg>') no-repeat 50%;
  background-color: var(--theme-base);
  top: 0px;
  left: 0px;
  transition: all 0.3s;
  box-shadow: var(--box-shadow);
}

.checkbox:checked + .switch::after {
  left: 21px;
}

.checkbox {
  display: none !important;
}

[aria-checked="false"] + .switch {
  background-color: var(--theme-accent);
}

.card {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  background-color: var(--theme-base);
  border: var(--border-style);
  border-radius: var(__border-radius);
  padding: var(--padding);
}

.card__title {
  display: flex;
  align-items: center;
  font-weight: bold;
}

.card__body {
  flex-grow: 1;
}

.card__footer {
  margin-top: auto;
  display: flex;
  justify-content: space-between;
}

.card__footer * {
  margin-top: unset;
}

.card__footer *:last-of-type {
  text-align: right;
}

html {
  font-size: 12px;
  font-family: 'Montserrat', sans-serif;
}

body {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background-color: var(--theme-base);
  color: var(--theme-font);
  font-size: 1.4rem;
  margin: 0;
  padding: calc(var(--padding) / 2);
}

nav, header, main, footer {
  padding: 1rem;
}

@media screen and (min-width: 1080px) {
  main {
    display: flex;
  }
}

footer {
  margin-top: auto;
  display: flex;
  align-items: center;
  justify-content: center;
}

.container {
  max-width: 1080px;
  width: 100%;
  margin: 0 auto;
}

.section--outline {
  padding: var(--padding);
  border-radius: var(--border-radius);
  border: 1px solid var(--theme-shade);
  margin-top: 3rem;
}

.section--outline > h2 {
  margin-top: -3rem;
  padding: 0 var(--padding);
  width: max-content;
  background-color: var(--theme-base);
}

.flex-parent {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  /* Required to push wrapping on to new line .*/
  --multiplyer: calc(800px - 100%);
  gap: 1rem;
}

.flex-parent > * {
  margin-top: unset;
  flex-basis: calc(var(--multiplyer) * 999);
  /* calc((ideal width - container current width) * large number) */
  flex-shrink: 1;
  /* Default Value: allows item to shrink */
  flex-grow: 1;
  /*Default Value: 0, value 1 allows item to grow */
}

.grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(15rem, 1fr));
  grid-gap: 1rem;
  max-width: 1080px;
  margin-left: auto;
  margin-right: auto;
}

.grid > * {
  min-height: 5rem;
}
